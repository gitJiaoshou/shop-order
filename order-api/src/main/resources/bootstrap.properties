# 服务名称
spring.application.name=shop-order-api
# 注册发现中心
spring.cloud.nacos.discovery.server-addr=${SHOP_NACOS_ADDRESS}
spring.cloud.nacos.discovery.namespace=${SHOP_NACOS_NAMESPACE}
spring.cloud.nacos.discovery.cluster-name=${SHOP_NACOS_CLUSTER_NAME}
spring.cloud.nacos.discovery.ip=${PUBLIC_IP}
spring.cloud.nacos.discovery.port=${server.port}
# 服务环境
spring.profiles.active=${PROFILE_ACTIVE}
# 配置中心
spring.cloud.nacos.config.file-extension=properties
spring.cloud.nacos.config.namespace=${SHOP_NACOS_NAMESPACE}
spring.cloud.nacos.config.group=Service
spring.cloud.nacos.config.server-addr=${SHOP_NACOS_ADDRESS}

# 引入配置文件
spring.cloud.nacos.config.ext-config[0].data-id=shop_global.properties
spring.cloud.nacos.config.ext-config[0].group=Global
spring.cloud.nacos.config.ext-config[0].refresh=true
spring.cloud.nacos.config.ext-config[1].data-id=ORDER_DB.properties
spring.cloud.nacos.config.ext-config[1].group=DB
spring.cloud.nacos.config.ext-config[1].refresh=true
spring.cloud.nacos.config.ext-config[2].data-id=cache_global.properties
spring.cloud.nacos.config.ext-config[2].group=CACHE
spring.cloud.nacos.config.ext-config[2].refresh=true

# redis配置
redis.cache.order.enable=true

# kafka配置

## 地址配置
spring.cloud.stream.kafka.binder.brokers = localhost:9092
spring.cloud.stream.kafka.binder.k-nodes = localhost:2181

spring.cloud.stream.kafka.binder.auto-create-topics = true
spring.cloud.stream.bindings.input_order.destination=order
spring.cloud.stream.bindings.input_order.content-type = application/json
spring.cloud.stream.bindings.input_order.group = order

spring.cloud.stream.bindings.output_order.destination=order
spring.cloud.stream.bindings.output_order.content-type = application/json
spring.cloud.stream.bindings.output_order.group = order

spring.cloud.stream.bindings.input_goods.destination=goods
spring.cloud.stream.bindings.input_goods.content-type = application/json
spring.cloud.stream.bindings.input_goods.group = goods

spring.cloud.stream.bindings.output_goods.destination=goods
spring.cloud.stream.bindings.output_goods.content-type = application/json
spring.cloud.stream.bindings.output_goods.group = goods